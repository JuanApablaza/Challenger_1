# -*- coding: utf-8 -*-
"""AluraStoreLatamJuanApablazaChallenger.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1F_YWCwRNAswubcb1wBhn0lIpuQmslLw9

### Importación de datos
"""

import pandas as pd

url = "https://raw.githubusercontent.com/alura-es-cursos/challenge1-data-science-latam/refs/heads/main/base-de-datos-challenge1-latam/tienda_1%20.csv"
url2 = "https://raw.githubusercontent.com/alura-es-cursos/challenge1-data-science-latam/refs/heads/main/base-de-datos-challenge1-latam/tienda_2.csv"
url3 = "https://raw.githubusercontent.com/alura-es-cursos/challenge1-data-science-latam/refs/heads/main/base-de-datos-challenge1-latam/tienda_3.csv"
url4 = "https://raw.githubusercontent.com/alura-es-cursos/challenge1-data-science-latam/refs/heads/main/base-de-datos-challenge1-latam/tienda_4.csv"

tienda = pd.read_csv(url)
tienda2 = pd.read_csv(url2)
tienda3 = pd.read_csv(url3)
tienda4 = pd.read_csv(url4)

tienda2.head()

from google.colab import sheets
sheet = sheets.InteractiveSheet(df=tienda2)

"""#1. Análisis de facturación


"""

# prompt: muestrame la facturacion total de cada tienda

import pandas as pd

# ... (previous code)

# Calculate total billing for each store
total_billing_tienda = tienda['Precio'].sum()
total_billing_tienda2 = tienda2['Precio'].sum()
total_billing_tienda3 = tienda3['Precio'].sum()
total_billing_tienda4 = tienda4['Precio'].sum()

total_General=total_billing_tienda+total_billing_tienda2+total_billing_tienda3+total_billing_tienda4

# Print the results
print(f"Facturación total de la tienda 1: {total_billing_tienda}")
print(f"Facturación total de la tienda 2: {total_billing_tienda2}")
print(f"Facturación total de la tienda 3: {total_billing_tienda3}")
print(f"Facturación total de la tienda 4: {total_billing_tienda4}")

print(f"Facturación total : {total_General}")



"""# 2. Ventas por categoría"""

# Lista de DataFrames y sus nombres
tiendas = {
    'tienda': tienda,
    'tienda2': tienda2,
    'tienda3': tienda3,
    'tienda4': tienda4
}

# Mostrar categorías populares por tienda
for nombre, df in tiendas.items():
    categorias_populares = df['Categoría del Producto'].value_counts().reset_index()
    categorias_populares.columns = ['Categoría', 'Cantidad']
    categorias_populares = categorias_populares.sort_values(by='Cantidad', ascending=False)

    print(f"\n--- {nombre.upper()} ---")
    print(categorias_populares)

# Combinar todas las tiendas y mostrar categorías totales
todas_tiendas = pd.concat([tienda, tienda2, tienda3, tienda4])
categorias_totales = todas_tiendas['Categoría del Producto'].value_counts().reset_index()
categorias_totales.columns = ['Categoría', 'Cantidad_total']
categorias_totales = categorias_totales.sort_values(by='Cantidad_total', ascending=False)

print("\n--- CATEGORÍAS MÁS POPULARES EN TODAS LAS TIENDAS ---")
print(categorias_totales)



"""# 3. Calificación promedio de la tienda

"""

# prompt: de acuerdo al codigo anterior, sacar el promedio de Calificación por tienda, con 3 decimales y el promedio de calificacion total

# Calculate the average rating for each store
average_rating_tienda = tienda['Calificación'].mean()
average_rating_tienda2 = tienda2['Calificación'].mean()
average_rating_tienda3 = tienda3['Calificación'].mean()
average_rating_tienda4 = tienda4['Calificación'].mean()

# Print the average ratings with 3 decimal places
print(f"Calificación promedio de la tienda 1: {average_rating_tienda:.3f}")
print(f"Calificación promedio de la tienda 2: {average_rating_tienda2:.3f}")
print(f"Calificación promedio de la tienda 3: {average_rating_tienda3:.3f}")
print(f"Calificación promedio de la tienda 4: {average_rating_tienda4:.3f}")

# Calculate the overall average rating
overall_average_rating = (average_rating_tienda + average_rating_tienda2 + average_rating_tienda3 + average_rating_tienda4) / 4

# Print the overall average rating with 3 decimal places
print(f"Calificación promedio total: {overall_average_rating:.3f}")



"""# 4. Productos más y menos vendidos"""

# prompt: calcular el producto mas vendido y menos vendido por tienda , y

# ... (previous code)

# Function to find the most and least sold products per store
def find_top_bottom_products(df, store_name):
    product_counts = df['Producto'].value_counts()
    most_sold = product_counts.index[0]
    least_sold = product_counts.index[-1]
    return most_sold, least_sold

# Find most and least sold products for each store
for name, df in tiendas.items():
    most_sold, least_sold = find_top_bottom_products(df, name)
    print(f"\n--- {name.upper()} ---")
    print(f"Producto más vendido: {most_sold}")
    print(f"Producto menos vendido: {least_sold}")

# prompt: calcular el producto mas vendido y menos vendido de todas las tiendas

import pandas as pd
# Combine all stores into a single DataFrame
all_stores_df = pd.concat([tienda, tienda2, tienda3, tienda4])

# Calculate the total sales of each product across all stores
product_sales = all_stores_df['Producto'].value_counts()

# Find the most and least sold products
most_sold_product = product_sales.index[0]
least_sold_product = product_sales.index[-1]

# Print the results
print(f"\n--- ALL STORES ---")
print(f"Producto más vendido: {most_sold_product}")
print(f"Producto menos vendido: {least_sold_product}")

"""# 5. Envío promedio por tienda"""

# prompt: calcular el costo promedio por tienda

# Calculate the average shipping cost for each store
average_shipping_tienda = tienda['Costo de envío'].mean()
average_shipping_tienda2 = tienda2['Costo de envío'].mean()
average_shipping_tienda3 = tienda3['Costo de envío'].mean()
average_shipping_tienda4 = tienda4['Costo de envío'].mean()

# Print the average shipping costs
print(f"Costo de envío promedio de la tienda 1: {average_shipping_tienda:.2f}")
print(f"Costo de envío promedio de la tienda 2: {average_shipping_tienda2:.2f}")
print(f"Costo de envío promedio de la tienda 3: {average_shipping_tienda3:.2f}")
print(f"Costo de envío promedio de la tienda 4: {average_shipping_tienda4:.2f}")

# Calculate the overall average shipping cost
overall_average_shipping = (average_shipping_tienda + average_shipping_tienda2 + average_shipping_tienda3 + average_shipping_tienda4) / 4

# Print the overall average shipping cost
print(f"Costo de envío promedio total: {overall_average_shipping:.2f}")

# prompt: hacer un grafico de lineas de las 4 tiendas , con la suma del precio

import matplotlib.pyplot as plt

# Data for the plot
stores = ['Tienda 1', 'Tienda 2', 'Tienda 3', 'Tienda 4']
total_billings = [total_billing_tienda, total_billing_tienda2, total_billing_tienda3, total_billing_tienda4]

# Create the line plot
plt.plot(stores, total_billings, marker='o')

# Customize the plot
plt.xlabel('Tiendas')
plt.ylabel('Suma del Precio')
plt.title('Facturación Total por Tienda')
plt.grid(True)

# Show the plot
plt.show()

# prompt: hacer un grafico de lineas de las 4 tiendas , con la suma del costo envio

import matplotlib.pyplot as plt
# Data for the plot
stores = ['Tienda 1', 'Tienda 2', 'Tienda 3', 'Tienda 4']
shipping_costs = [tienda['Costo de envío'].sum(), tienda2['Costo de envío'].sum(), tienda3['Costo de envío'].sum(), tienda4['Costo de envío'].sum()]

# Create the line plot
plt.plot(stores, shipping_costs, marker='o')

# Customize the plot
plt.xlabel('Tiendas')
plt.ylabel('Costo de envío')
plt.title('Suma del Costo de Envío por Tienda')
plt.grid(True)

# Show the plot
plt.show()

# prompt: calcular utilidad por tienda , precio menos costo envío y graficar

import matplotlib.pyplot as plt
# Calculate profit for each store
tienda['Utilidad'] = tienda['Precio'] - tienda['Costo de envío']
tienda2['Utilidad'] = tienda2['Precio'] - tienda2['Costo de envío']
tienda3['Utilidad'] = tienda3['Precio'] - tienda3['Costo de envío']
tienda4['Utilidad'] = tienda4['Precio'] - tienda4['Costo de envío']

# Calculate total profit for each store
total_profit_tienda = tienda['Utilidad'].sum()
total_profit_tienda2 = tienda2['Utilidad'].sum()
total_profit_tienda3 = tienda3['Utilidad'].sum()
total_profit_tienda4 = tienda4['Utilidad'].sum()

# Print the total profit for each store
print(f"Utilidad total de la tienda 1: {total_profit_tienda}")
print(f"Utilidad total de la tienda 2: {total_profit_tienda2}")
print(f"Utilidad total de la tienda 3: {total_profit_tienda3}")
print(f"Utilidad total de la tienda 4: {total_profit_tienda4}")

# Data for the plot
stores = ['Tienda 1', 'Tienda 2', 'Tienda 3', 'Tienda 4']
total_profits = [total_profit_tienda, total_profit_tienda2, total_profit_tienda3, total_profit_tienda4]

# Create the bar plot
plt.bar(stores, total_profits, color=['skyblue', 'lightcoral', 'lightgreen', 'lightsalmon'])

# Customize the plot
plt.xlabel('Tiendas')
plt.ylabel('Utilidad Total')
plt.title('Utilidad Total por Tienda')
plt.grid(axis='y', linestyle='--')

# Add value labels on top of each bar
for i, profit in enumerate(total_profits):
    plt.text(i, profit, f'{profit:.2f}', ha='center', va='bottom')

# Show the plot
plt.show()





"""**Diagnostico**

De acuerdo a los analisis de los datos, la tienda 4 es la que tiene menos utilidad , costos de envío son bajos , es la que tiene menos utilidad por ultimo su calificacion es de un 3.996, la tercera mas baja. Por lo tanto la tienda 4 debería cerrar.
"""